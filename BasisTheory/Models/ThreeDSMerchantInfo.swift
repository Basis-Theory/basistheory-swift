//
// ThreeDSMerchantInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ThreeDSMerchantInfo: Codable, JSONEncodable, Hashable {

    public var mid: String?
    public var acquirerBin: String?
    public var name: String?
    public var countryCode: String?
    public var categoryCode: String?
    public var url: String?
    public var riskInfo: ThreeDSMerchantRiskInfo?

    public init(mid: String? = nil, acquirerBin: String? = nil, name: String? = nil, countryCode: String? = nil, categoryCode: String? = nil, url: String? = nil, riskInfo: ThreeDSMerchantRiskInfo? = nil) {
        self.mid = mid
        self.acquirerBin = acquirerBin
        self.name = name
        self.countryCode = countryCode
        self.categoryCode = categoryCode
        self.url = url
        self.riskInfo = riskInfo
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mid
        case acquirerBin = "acquirer_bin"
        case name
        case countryCode = "country_code"
        case categoryCode = "category_code"
        case url
        case riskInfo = "risk_info"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var containerEncoder = encoder.container(keyedBy: CodingKeys.self)
        try containerEncoder.encodeIfPresent(mid, forKey: .mid)
        try containerEncoder.encodeIfPresent(acquirerBin, forKey: .acquirerBin)
        try containerEncoder.encodeIfPresent(name, forKey: .name)
        try containerEncoder.encodeIfPresent(countryCode, forKey: .countryCode)
        try containerEncoder.encodeIfPresent(categoryCode, forKey: .categoryCode)
        try containerEncoder.encodeIfPresent(url, forKey: .url)
        try containerEncoder.encodeIfPresent(riskInfo, forKey: .riskInfo)
    }
}

