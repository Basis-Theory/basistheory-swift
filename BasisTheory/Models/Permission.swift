//
// Permission.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct Permission: Codable, JSONEncodable, Hashable {

    public var type: String?
    public var description: String?
    public var applicationTypes: [String]?

    public init(type: String? = nil, description: String? = nil, applicationTypes: [String]? = nil) {
        self.type = type
        self.description = description
        self.applicationTypes = applicationTypes
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case description
        case applicationTypes = "application_types"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var containerEncoder = encoder.container(keyedBy: CodingKeys.self)
        try containerEncoder.encodeIfPresent(type, forKey: .type)
        try containerEncoder.encodeIfPresent(description, forKey: .description)
        try containerEncoder.encodeIfPresent(applicationTypes, forKey: .applicationTypes)
    }
}

