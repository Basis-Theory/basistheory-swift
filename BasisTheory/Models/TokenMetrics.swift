//
// TokenMetrics.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TokenMetrics: Codable, JSONEncodable, Hashable {

    public var count: Int64?
    public var lastCreatedAt: Date?

    public init(count: Int64? = nil, lastCreatedAt: Date? = nil) {
        self.count = count
        self.lastCreatedAt = lastCreatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case count
        case lastCreatedAt = "last_created_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var containerEncoder = encoder.container(keyedBy: CodingKeys.self)
        try containerEncoder.encodeIfPresent(count, forKey: .count)
        try containerEncoder.encodeIfPresent(lastCreatedAt, forKey: .lastCreatedAt)
    }
}

