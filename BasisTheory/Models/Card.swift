//
// Card.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct Card: Codable, JSONEncodable, Hashable {

    public var number: String?
    public var expirationMonth: Int?
    public var expirationYear: Int?
    public var cvc: String?

    public init(number: String? = nil, expirationMonth: Int? = nil, expirationYear: Int? = nil, cvc: String? = nil) {
        self.number = number
        self.expirationMonth = expirationMonth
        self.expirationYear = expirationYear
        self.cvc = cvc
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case number
        case expirationMonth = "expiration_month"
        case expirationYear = "expiration_year"
        case cvc
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var containerEncoder = encoder.container(keyedBy: CodingKeys.self)
        try containerEncoder.encodeIfPresent(number, forKey: .number)
        try containerEncoder.encodeIfPresent(expirationMonth, forKey: .expirationMonth)
        try containerEncoder.encodeIfPresent(expirationYear, forKey: .expirationYear)
        try containerEncoder.encodeIfPresent(cvc, forKey: .cvc)
    }
}

