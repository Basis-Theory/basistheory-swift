//
// IntermediateSigningKey.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct IntermediateSigningKey: Codable, JSONEncodable, Hashable {

    public var signedKey: String?
    public var signatures: [String]?

    public init(signedKey: String? = nil, signatures: [String]? = nil) {
        self.signedKey = signedKey
        self.signatures = signatures
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case signedKey
        case signatures
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var containerEncoder = encoder.container(keyedBy: CodingKeys.self)
        try containerEncoder.encodeIfPresent(signedKey, forKey: .signedKey)
        try containerEncoder.encodeIfPresent(signatures, forKey: .signatures)
    }
}

