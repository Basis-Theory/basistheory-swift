//
// Privacy.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct Privacy: Codable, JSONEncodable, Hashable {

    public var classification: String?
    public var impactLevel: String?
    public var restrictionPolicy: String?

    public init(classification: String? = nil, impactLevel: String? = nil, restrictionPolicy: String? = nil) {
        self.classification = classification
        self.impactLevel = impactLevel
        self.restrictionPolicy = restrictionPolicy
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case classification
        case impactLevel = "impact_level"
        case restrictionPolicy = "restriction_policy"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var containerEncoder = encoder.container(keyedBy: CodingKeys.self)
        try containerEncoder.encodeIfPresent(classification, forKey: .classification)
        try containerEncoder.encodeIfPresent(impactLevel, forKey: .impactLevel)
        try containerEncoder.encodeIfPresent(restrictionPolicy, forKey: .restrictionPolicy)
    }
}

